/*
 * This class will take generics and put their info into the nodes
 * these nodes will be implemented in the linked stack class
 * the constructor sets the info of the parameter to info and makes its link null
 * setInfo will take the parameter and will make info equal to it
 * get info will return the info of the node
 * set link will make the link equal to the top
 * get link will return the link to the current node
 */
public class LLNode<T>
{
 protected T info;      // the data this node stores 
 protected LLNode<T> next;
 protected int count = 0;
  
  
  public LLNode(T element)
  {
    this.info = element; //sets the info to the info given for the constructor
    this.next = null; //sets link to null
    incCount();
  }
  
  public void setInfo(T info)
  {
    this.info = info; //sets the info to the info given from the instructor
  }

  public void incCount()
  {
	  count++; //increases the count on the node
  }
  public T getInfo()
  {    
    return info; //returns the given info of the node
  }

  public int getCount()
  {
	  return count; //returns the count of occurences
  }
  
  public void setNext(LLNode<T> element)
  {
    this.next = element; //sets a link to the next node
  }
  
  
  public LLNode<T> getNext()
  {
    return next; //returns the next node
  }

} // end class
